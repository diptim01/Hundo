@model IEnumerable<Hundo_P.Vmodels.DailyExecVM>
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>PageTwo</title>
    <link href="~/Content/assets/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Content/css/style.css" rel="stylesheet">
    <!-- You can change the theme colors from here -->
    <link href="~/Content/css/colors/blue.css" id="theme" rel="stylesheet">
</head>
<body>
    <div class="col-lg-6">
        <div class="card">
            <div class="card-body">

                <h4 class="card-title">To Do list</h4>
                <h6 class="card-subtitle">List of your next task to complete</h6>
                <!-- ============================================================== -->
                <!-- To do list widgets -->
                <!-- ============================================================== -->
                <div class="to-do-widget m-t-20">
                    <!-- .modal for add task -->
                    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title">Task Completed!</h4>
                                    <button type="button" class="close closemodal" data-dismiss="modal" aria-label="Close"> <span aria-hidden="true">&times;</span> </button>
                                </div>
                                <form action="@Url.Action("PageTwo","DailyExec")" method="post">
                                    <div class="modal-body">

                                        <p>Good Work! You completed the task for the day. Kindly take  a few seconds to write how the experience was like for you.</p>
                                        <div> <input hidden name="id" id="uniqueId" value="uniqueId" /></div>
                                        <div class="form-group">
                                            <label>Task name</label>
                                            <input type="text" class="form-control" id="summaryname" disabled placeholder="Enter Task Name">
                                        </div>
                                        <div class="form-group">
                                            <label>How I felt about the task</label>
                                            <textarea class="form-control" name="finalComment" placeholder="I ..."></textarea>
                                        </div>
                                        <i>Remember each day counts towards victory when you fight to succeed on it.</i>

                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary closemodal" data-dismiss="modal">Close</button>
                                        <button type="submit" class="btn btn-success">Submit</button>
                                    </div>
                                </form>
                            </div>
                            <!-- /.modal-content -->
                        </div>
                        <!-- /.modal-dialog -->
                    </div>
                    <!-- /.modal -->
                    @foreach (var item in Model.OrderByDescending(x => x.DateCreated))
                    {
                        <ul class="list-task todo-list list-group m-b-0" data-role="tasklist">
                            <li class="list-group-item taskwrapper" data-role="task">
                                <div class="checkbox checkbox-info">
                                    <input type="checkbox" id="@item.DailyExecModelId" class="getTicked" name="inputCheckboxesCall" data-id="@item.DailyExecModelId" data-summary="@item.DailyTheme" data-mytime="@item.TimeOfCompletion">
                                    <label for="@item.DailyExecModelId" class="toremove"> <span>@item.DailyTheme</span> <span class="label label-danger">@item.DateComment</span> </label>
                                </div>
                                <div class="item-date">@item.DateCreated.ToShortDateString() [<span style="color:blue; font-weight:900">@DateTime.Now.ToString("HH:mm:ss") </span> - <span style="color:red; font-weight:900" id="timing" class="expiry"> </span>]</div>
                            </li>



                            @*<li class="list-group-item" data-role="task">
                                    <div class="checkbox checkbox-info">
                                        <input type="checkbox" id="inputSchedule" name="inputCheckboxesSchedule">
                                        <label for="inputSchedule" class=""> <span>Schedule meeting with</span> </label>
                                    </div>
                                    <ul class="assignedto">
                                        <li><img src="../assets/images/users/1.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Steave"></li>
                                        <li><img src="../assets/images/users/2.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Jessica"></li>
                                        <li><img src="../assets/images/users/3.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Priyanka"></li>
                                        <li><img src="../assets/images/users/4.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Selina"></li>
                                    </ul>
                                </li>

                                <li class="list-group-item" data-role="task">
                                    <div class="checkbox checkbox-info">
                                        <input type="checkbox" id="inputBook" name="inputCheckboxesBook">
                                        <label for="inputBook" class=""> <span>Book flight for holiday</span> </label>
                                    </div>
                                    <div class="item-date"> 26 jun 2017</div>
                                </li>
                                <li class="list-group-item" data-role="task">
                                    <div class="checkbox checkbox-info">
                                        <input type="checkbox" id="inputForward" name="inputCheckboxesForward">
                                        <label for="inputForward" class="toremove"> <span>Forward all tasks</span> <span class="label label-warning">2 weeks</span> </label>
                                    </div>
                                    <div class="item-date"> 26 jun 2017</div>
                                </li>
                                <li class="list-group-item" data-role="task">
                                    <div class="checkbox checkbox-info">
                                        <input type="checkbox" id="inputRecieve" name="inputCheckboxesRecieve">
                                        <label for="inputRecieve" class=""> <span>Recieve shipment</span> </label>
                                    </div>
                                    <div class="item-date"> 26 jun 2017</div>
                                </li>
                                <li class="list-group-item" data-role="task">
                                    <div class="checkbox checkbox-info">
                                        <input type="checkbox" id="inputpayment" name="inputCheckboxespayment">
                                        <label for="inputpayment" class=""> <span>Send payment today</span> </label>
                                    </div>
                                    <div class="item-date"> 26 jun 2017</div>
                                </li>
                                <li class="list-group-item" data-role="task">
                                    <div class="checkbox checkbox-info">
                                        <input type="checkbox" id="inputForward2" name="inputCheckboxesd">
                                        <label for="inputForward2" class=""> <span>Important tasks</span> <span class="label label-success">2 weeks</span> </label>
                                    </div>
                                    <ul class="assignedto">
                                        <li><img src="../assets/images/users/1.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Assign to Steave"></li>
                                        <li><img src="../assets/images/users/2.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Assign to Jessica"></li>
                                        <li><img src="../assets/images/users/4.jpg" alt="user" data-toggle="tooltip" data-placement="top" title="" data-original-title="Assign to Selina"></li>
                                    </ul>
                                </li>*@
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="~/Content/assets/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap tether Core JavaScript -->
    <script src="~/Content/assets/plugins/popper/popper.min.js"></script>
    <script src="~/Content/assets/plugins/bootstrap/js/bootstrap.min.js"></script>
    <!-- slimscrollbar scrollbar JavaScript -->
    <script src="~/Scripts/js/jquery.slimscroll.js"></script>
    <!--Wave Effects -->
    <script src="~/Scripts/js/waves.js"></script>
    <!--Menu sidebar -->
    <script src="~/Scripts/js/sidebarmenu.js"></script>
    <!--stickey kit -->
    <script src="~/Content/assets/plugins/sticky-kit-master/dist/sticky-kit.min.js"></script>
    <script src="~/Content/assets/plugins/sparkline/jquery.sparkline.min.js"></script>
    <!--stickey kit -->
    <script src="~/Content/assets/plugins/sticky-kit-master/dist/sticky-kit.min.js"></script>
    <script src="~/Content/assets/plugins/sparkline/jquery.sparkline.min.js"></script>
    <script src="~/Content/assets/plugins/sparkline/jquery.sparkline.min.js"></script>
    <!--Custom JavaScript -->
    <script src="~/Scripts/js/custom.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            // var inputs = document.querySelectorAll('input.getTicked');//document.getElementsByTagName('input');
            var inputs = document.querySelectorAll('.taskwrapper');

            for (var i = 0; i < inputs.length; i++) {

                (function (i) {
                    var tickedItem = inputs[i].getElementsByClassName('getTicked');
                    var y = tickedItem[0].dataset === null || tickedItem[0].dataset.mytime === null ? "" : tickedItem[0].dataset.mytime;
                 
                    var countDownTime;

                    if (y === null || y === "") { countDownTime = -100; }
                    else { countDownTime = new Date(y).getTime(); }
              
                    var x = setInterval(function () {
                        // Get todays date and time
                        var now = new Date().getTime();

                      
                        // countdown first because it will be higher than the dateTime now ....I added the remaiining time of completion with the day it was created .. 
                        var distance = countDownTime - now;

                        if (distance < 0) { // if negative
                            clearInterval(x); // clear all interval
                            console.log("j", inputs[i].getElementsByClassName('item-date'));
                            inputs[i].getElementsByClassName('item-date')[0].lastElementChild.innerHTML = "EXPIRED";

                        }
                        else {
                            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

                            inputs[i].getElementsByClassName('item-date')[0].lastElementChild.innerHTML = hours + "h "
                                + minutes + "m " + seconds + "s ";
                        }

                    }, 1000);
                })(i);
            }

            $(".getTicked").change(function () { // on change of state
                //data-summary
                var summarytask = $(this).data('summary');
                var uniqueId = $(this).data('id');

                $('#uniqueId').val(uniqueId);
                $('#summaryname').val(summarytask);
                $('#myModal').modal({ backdrop: 'static', keyboard: false });// do the magic here
            });


            $(".closemodal").on('click', function () {
                $(".getTicked").prop('checked', false);
                $(".toremove").removeClass('task-done');
            });

        });
    </script>
</body>


</html>
